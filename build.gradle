version = '0.0.1-SNAPSHOT'
group = 'net.weaz'

buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
        springPlatformVersion = '2.0.3.RELEASE'
        springPlatformPluginVersion = '0.5.4.RELEASE'
        springCloudVersion = 'Brixton.M4'

        nodeVersion = '0.12.12'
        npmVersion = '2.15.0'

        flywayPluginVersion = '3.2.1'
        nodePluginVersion = '0.12'
        gruntPluginVersion = '0.12'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.flywaydb:flyway-gradle-plugin:${flywayPluginVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${springPlatformPluginVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:${nodePluginVersion}")
        classpath("com.moowork.gradle:gradle-grunt-plugin:${gruntPluginVersion}")
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'spring-boot'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'maven-publish'
apply plugin: 'com.moowork.node'
apply plugin: 'com.moowork.grunt'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencyManagement {
    imports {
        mavenBom("io.spring.platform:platform-bom:${springPlatformVersion}")
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.hsqldb:hsqldb')
    compile('org.apache.commons:commons-lang3')
    compile('commons-io:commons-io')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile('org.springframework.security:spring-security-test')
}

node {
    version = project.nodeVersion
    npmVersion = project.npmVersion
    distBaseUrl = 'https://nodejs.org/dist'
    download = true

    workDir = rootProject.file("${project.projectDir}/nodejs")
    nodeModulesDir = rootProject.file("${project.projectDir}")
}

apply from: rootProject.file('config/gradle/nodeTasks.gradle');

grunt {
    workDir = rootProject.file("${project.projectDir}")
    colors = false
    bufferOutput = false
}

apply from: rootProject.file('config/gradle/gruntTasks.gradle');

//noinspection GroovyAssignabilityCheck
test {
    testLogging {
        exceptionFormat = 'full'
    }

    afterTest { desc, result ->
        println "- ${desc.name}: ${result.resultType}"
    }
}

checkstyle {
    //noinspection GroovyAssignabilityCheck
    configFile = rootProject.file('config/checkstyle/checkstyle-gradle.xml')
    configProperties = ["suppressionFile": project(':').file('config/checkstyle/suppressions.xml')]
}

task sourceJar(type: Jar, group: 'build', description: 'Write more descriptions') {
    //noinspection GroovyAssignabilityCheck
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = project.group
            artifactId = project.name
            version = project.version

            //noinspection GroovyAssignabilityCheck
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

//noinspection GroovyAssignabilityCheck
jar {
    baseName = project.name
    version = project.version
}
//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8
//noinspection GroovyUnusedAssignment
targetCompatibility = 1.8

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

task superClean(dependsOn: ['clean', 'removeNodeModules'], group: 'build', description: 'Write more descriptions')

//noinspection GroovyAssignabilityCheck
build.dependsOn gruntBuild